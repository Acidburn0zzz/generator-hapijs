// This is a file generated by the yeoman generator hapijs

/**
 * Controller which handles requests/responses relating to <%= name %>
 *
 * @type {<%= name %>Dao|exports}
 */
var <%= name %>Dao = require('./<%= name %>-dao');

module.exports = function() {

  return {

    /**
     * Creates a <%= name %>
     *
     * @param req
     * @param reply
     */
    create<%= name %>: function create<%= name %>(req, reply) {

      <%= name %>Dao.create<%= name %>(req.params.id, req.payload, function (err, data) {

        if (err) {
          return reply(Boom.badImplementation(err));
        }

        reply(data);
      });

    },

    /**
     * Gets all <%= name %>
     *
     * @param req
     * @param reply
     */
    find<%= name %>: function find<%= name %>(req, reply) {

      <%= name %>Dao.find<%= name %>(req.params.id, req.payload, function (err, data) {

        if (err) {
          return reply(Boom.badImplementation(err));
        }

        reply(data);
      });
    },

    /**
     * Get a specific <%= name %> by id
     *
     * @param req
     * @param reply
     */
    find<%= name %>ById: function find<%= name %>ById(req, reply) {

      <%= name %>Dao.find<%= name %>ById(req.params.id, req.payload, function (err, data) {

        if (err) {
          return reply(Boom.badImplementation(err));
        }

        reply(data);
      });
    },

    /**
     * Update a specific <%= name %> by id
     *
     * @param req
     * @param reply
     */
    update<%= name %>: function update<%= name %>(req, reply) {

      <%= name %>Dao.update<%= name %>(req.params.id, req.payload, function (err, data) {

        if (err) {
          return reply(Boom.badImplementation(err));
        }

        reply(data);
      });
    }
		
    /**
     * Delete a specific <%= name %> by id
     *
     * @param req
     * @param reply
     */
    delete<%= name %>: function delete<%= name %>(req, reply) {

      <%= name %>Dao.update<%= name %>(req.params.id, req.payload, function (err, data) {

        if (err) {
          return reply(Boom.badImplementation(err));
        }

        reply(data);
      });
    }
  }

}();
